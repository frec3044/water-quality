---
title: "Water Quality: Part 2"
author: 'Add name'
format:
  html:
    embed-resources: true
---

```{r message= FALSE}
library(tidyverse)
library(lubridate)
```

# Geneate report for an agency

An Iowa agency wants a report on how water quality is changing through time across the state. Generate a plot that provides the number of days per year where the average nitrate concentration for each site is higher than the EPA limit in the data (same plot as question 10 in part 1 but with more sites). Use the same date range as in part 1. (`2011-01-01` to `2024-01-01`).

You have all the tools to need to generate the report except for the list of USGS sites in Iowa. You can find the list of all sites in a json file in the `data/site_list.json` with the site code as a column.

A JSON file is a common format used when requesting data from databash hosted remotely. JSON stands for JavaScript Object Notation. You can learn more about JSON [here](https://r4ds.hadley.nz/rectangling.html#json).  You will need to install the `jsonlite` package and use the `read_json()`  function to read in the metadata (you can call this `df_site_list`). Be sure to  use the the argument `simplifyVector = TRUE` so that you covert the JSON to a dataframe.

**Question 1:**

Your answers to this Question is going to be a mix of code chunks, plots, and text. It should include

-   Read in and prepare USGS data for analysis (remember that you already have created the function to download and clean the data. You have also learned about the `map` function to iterate over sites).  Use functions introduced in this module when appropriate. 
-   Calculate the number of days per year that each site exceeds the EPA limit (you have already done this for a single site)
-   Plot data that includes all sites (e.g., sites should be separate lines on a single plot)
-   Describe the patterns and draw conclusions from the data.

**Answer 1:**



# Rendering and committing

Remember to Render your document as a `html` and comment+push to GitHub your code, and rendered html that was created when you knitted the document. Your GitHub repository should have multiple commits with informative commit messages.

# Attribution

Include citation of any AI-generated assistance or discussion with classmates (per policy in syllabus). Proper documentation of AI-generated assistance includes the prompt, the source (e.g., ChatGPT), and the significant parts of the response.  Proper documentation of discussion with classmates include listing their names and the components discussed.  

